AWSTemplateFormatVersion: 2010-09-09
Description: >
  MysteryShopper S3 + Lambda Cloudformation example for AWS week in the Data Engineering Software Academy

Parameters:
  YourName:
    Type: String
    Description: Enter your name in format 'first-last' to customise the way your resources are named

  # TODO: Add NetworkStackName
  NetworkStackName:
    Type: String
    Description: Network stack with VPC containing Redshift instance
    Default: project-networking

  # TODO: Add EtlLambdaFunction:
Resources:
  EtlLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${YourName}-shopper-etl-lambda"
      Runtime: python3.12
      Handler: mystery_shop_etl_lambda.lambda_handler
      Code: ./src
      Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/nja-lambda-execution-role"
      Timeout: 30
      VpcConfig:
        SecurityGroupIds:
          - Fn::ImportValue: !Sub "${NetworkStackName}-VPCSGID"
        SubnetIds:
          - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet0ID"
      Tags:
        - Key: Name
          Value: !Sub "${YourName}-shopper-etl-lambda"

  ShopperRawDataBucket:
    Type: AWS::S3::Bucket
    # TODO: Add DependsOn
    DependsOn:
      - ShopperRawDataBucketPermission
      - EtlLambdaFunction
    Properties:
      BucketName: !Sub "${YourName}-shopper-raw-data"
      PublicAccessBlockConfiguration: # do not allow any public access
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      # TODO: Add NotificationConfiguration
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt EtlLambdaFunction.Arn
      Tags:
        - Key: Name
          Value: !Sub "${YourName}-shopper-raw-data"

  # TODO: Add ShopperRawDataBucketPermission
  ShopperRawDataBucketPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref EtlLambdaFunction
      Principal: s3.amazonaws.com
      SourceArn: !Sub "arn:aws:s3:::${YourName}-shopper-raw-data"

  ShopperRawDataBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ShopperRawDataBucket
      PolicyDocument:
        Statement:
          - Sid: "AllowSSLRequestsOnly"
            Action: "s3:*"
            Principal: "*"
            Effect: "Deny" # Block if...
            Resource:
              - !Sub "arn:aws:s3:::${YourName}-shopper-raw-data"
              - !Sub "arn:aws:s3:::${YourName}-shopper-raw-data/*"
            Condition:
              Bool:
                aws:SecureTransport: "false" # ...the request is not HTTPS
